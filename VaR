#importing packages required for the estimation

import numpy as np
import pandas as pd
import matplotlib.pyplot as plt
import yfinance as yf
%matplotlib inline


MSFT_units = 1000 #number of MSFT shares to hold

price = yf.Ticker('MSFT') #derives the live MSFT price from yahoo

close_price_MSFT = price.history().tail(1)['Close'].iloc[0] #callin the history function on the live price
#to derive the last closing price

print("The most recent closing price for MSFT stock is: {}".format(close_price_MSFT)

MSFT_value = MSFT_units * close_price_MSFT #investment value dervied by multiplying msft_units by the closing price of the stock

rfr_MSFT = 0.02 #four week US treasury bill rate as risk free rate

vol_MSFT = 0.2116 #30 day MSFT volatitlity

#defining variables required for var simulation to calculate associated risk for holding 1000 units of MSFT shares for a month

simulations = 5000

t_MSFT = 21/252 #number of trading dates in a month

sample = np.random.standard_normal(simulations) #derives random samples shaped by the number of simulations 

plt.hist(sample, bins=100) #to visualize the random values created with a width of 100

print('The sample mean is: {}".format(sample.mean()))
print('The sample mean is: {}".format(sample.std()))








